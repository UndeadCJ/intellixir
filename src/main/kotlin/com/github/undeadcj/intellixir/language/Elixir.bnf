{
  parserClass="com.github.undeadcj.intellixir.language.parser.ElixirParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Elixir"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.undeadcj.intellixir.language.psi"
  psiImplPackage="com.github.undeadcj.intellixir.language.psi.impl"

  elementTypeHolderClass="com.github.undeadcj.intellixir.language.psi.ElixirTypes"
  elementTypeClass="com.github.undeadcj.intellixir.language.psi.ElixirElementType"
  tokenTypeClass="com.github.undeadcj.intellixir.language.psi.ElixirTokenType"
}

elixirFile ::= item_*

private item_ ::= (comment | docstring | keyword | atom)

// Single-line comments
comment ::= "#" ".*"? ("\n" | EOF)

// Docstrings
docstring ::= "@" ("doc"|"moduledoc") STRING_LITERAL

// Atoms
atom ::= ":" STRING_LITERAL

// Identifiers
private identifier ::= IDENTIFIER

// Numbers
private integer ::= INTEGER
private string ::= STRING

// Keywords in Elixir
keyword ::=
  "def" |
  "defmodule" |
  "defp" |
  "do" |
  "end" |
  "if" |
  "else" |
  "case" |
  "when" |
  "fn" |
  "true" |
  "false" |
  "nil" |
  "and" |
  "or" |
  "not" |
  "in" |
  "for" |
  "with" |
  "receive" |
  "try" |
  "catch" |
  "raise" |
  "alias" |
  "use" |
  "import" |
  "require"
